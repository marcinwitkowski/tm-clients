# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: asr_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='asr_service.proto',
  package='sarmata',
  syntax='proto3',
  serialized_pb=_b('\n\x11\x61sr_service.proto\x12\x07sarmata\"{\n\x10RecognizeRequest\x12\x39\n\x0finitial_request\x18\x01 \x01(\x0b\x32 .sarmata.InitialRecognizeRequest\x12,\n\raudio_request\x18\x02 \x01(\x0b\x32\x15.sarmata.AudioRequest\")\n\x0b\x43onfigField\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"N\n\x17InitialRecognizeRequest\x12$\n\x06\x63onfig\x18\x01 \x03(\x0b\x32\x14.sarmata.ConfigField\x12\r\n\x05token\x18\x02 \x01(\t\"6\n\x0c\x41udioRequest\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x12\x15\n\rend_of_stream\x18\x02 \x01(\x08\"D\n\x14\x44\x65\x66ineGrammarRequest\x12\r\n\x05token\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0f\n\x07grammar\x18\x03 \x01(\t\"1\n\x14\x44\x65\x66ineGrammarRespone\x12\r\n\x05\x65rror\x18\x01 \x01(\t\x12\n\n\x02ok\x18\x02 \x01(\x08\"\x92\x01\n\x11RecognizeResponse\x12\'\n\x06status\x18\x01 \x01(\x0e\x32\x17.sarmata.ResponseStatus\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0f\n\x07warning\x18\x03 \x01(\t\x12\x12\n\nevent_time\x18\x04 \x01(\x05\x12 \n\x07results\x18\x05 \x03(\x0b\x32\x0f.sarmata.Phrase\"\xd0\x01\n\x06Phrase\x12#\n\x05words\x18\x01 \x03(\x0b\x32\x14.sarmata.Phrase.Word\x12\x12\n\nconfidence\x18\x02 \x01(\x01\x12\x0f\n\x07\x63orrect\x18\x03 \x01(\x08\x12\x1f\n\x17semantic_interpretation\x18\x04 \x01(\t\x1a[\n\x04Word\x12\x12\n\ntranscript\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x01\x12\r\n\x05start\x18\x03 \x01(\x05\x12\x0b\n\x03\x65nd\x18\x04 \x01(\x05\x12\x0f\n\x07logprob\x18\x05 \x01(\x01*\x99\x02\n\x0eResponseStatus\x12\t\n\x05\x45MPTY\x10\x00\x12\x0b\n\x07SUCCESS\x10\x01\x12\x11\n\rPARTIAL_MATCH\x10\x02\x12\x0c\n\x08NO_MATCH\x10\x03\x12\x14\n\x10NO_INPUT_TIMEOUT\x10\x04\x12\x18\n\x14GRAMMAR_LOAD_FAILURE\x10\x05\x12\x1f\n\x1bGRAMMAR_COMPILATION_FAILURE\x10\x06\x12\x14\n\x10RECOGNIZER_ERROR\x10\x07\x12\x1b\n\x17TOO_MUCH_SPEECH_TIMEOUT\x10\x08\x12\r\n\tCANCELLED\x10\t\x12\x12\n\x0eSTART_OF_INPUT\x10\n\x12\x10\n\x0c\x45ND_OF_AUDIO\x10\x0b\x12\x15\n\x11SEMANTICS_FAILURE\x10\x0c\x32\x9c\x01\n\x03\x41SR\x12\x46\n\tRecognize\x12\x19.sarmata.RecognizeRequest\x1a\x1a.sarmata.RecognizeResponse(\x01\x30\x01\x12M\n\rDefineGrammar\x12\x1d.sarmata.DefineGrammarRequest\x1a\x1d.sarmata.DefineGrammarResponeb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_RESPONSESTATUS = _descriptor.EnumDescriptor(
  name='ResponseStatus',
  full_name='sarmata.ResponseStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EMPTY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PARTIAL_MATCH', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_MATCH', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_INPUT_TIMEOUT', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GRAMMAR_LOAD_FAILURE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GRAMMAR_COMPILATION_FAILURE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECOGNIZER_ERROR', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TOO_MUCH_SPEECH_TIMEOUT', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CANCELLED', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='START_OF_INPUT', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='END_OF_AUDIO', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SEMANTICS_FAILURE', index=12, number=12,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=816,
  serialized_end=1097,
)
_sym_db.RegisterEnumDescriptor(_RESPONSESTATUS)

ResponseStatus = enum_type_wrapper.EnumTypeWrapper(_RESPONSESTATUS)
EMPTY = 0
SUCCESS = 1
PARTIAL_MATCH = 2
NO_MATCH = 3
NO_INPUT_TIMEOUT = 4
GRAMMAR_LOAD_FAILURE = 5
GRAMMAR_COMPILATION_FAILURE = 6
RECOGNIZER_ERROR = 7
TOO_MUCH_SPEECH_TIMEOUT = 8
CANCELLED = 9
START_OF_INPUT = 10
END_OF_AUDIO = 11
SEMANTICS_FAILURE = 12



_RECOGNIZEREQUEST = _descriptor.Descriptor(
  name='RecognizeRequest',
  full_name='sarmata.RecognizeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='initial_request', full_name='sarmata.RecognizeRequest.initial_request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='audio_request', full_name='sarmata.RecognizeRequest.audio_request', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=153,
)


_CONFIGFIELD = _descriptor.Descriptor(
  name='ConfigField',
  full_name='sarmata.ConfigField',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='sarmata.ConfigField.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='sarmata.ConfigField.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=155,
  serialized_end=196,
)


_INITIALRECOGNIZEREQUEST = _descriptor.Descriptor(
  name='InitialRecognizeRequest',
  full_name='sarmata.InitialRecognizeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='config', full_name='sarmata.InitialRecognizeRequest.config', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='token', full_name='sarmata.InitialRecognizeRequest.token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=198,
  serialized_end=276,
)


_AUDIOREQUEST = _descriptor.Descriptor(
  name='AudioRequest',
  full_name='sarmata.AudioRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='sarmata.AudioRequest.content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_of_stream', full_name='sarmata.AudioRequest.end_of_stream', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=278,
  serialized_end=332,
)


_DEFINEGRAMMARREQUEST = _descriptor.Descriptor(
  name='DefineGrammarRequest',
  full_name='sarmata.DefineGrammarRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='sarmata.DefineGrammarRequest.token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='sarmata.DefineGrammarRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='grammar', full_name='sarmata.DefineGrammarRequest.grammar', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=334,
  serialized_end=402,
)


_DEFINEGRAMMARRESPONE = _descriptor.Descriptor(
  name='DefineGrammarRespone',
  full_name='sarmata.DefineGrammarRespone',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='sarmata.DefineGrammarRespone.error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ok', full_name='sarmata.DefineGrammarRespone.ok', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=404,
  serialized_end=453,
)


_RECOGNIZERESPONSE = _descriptor.Descriptor(
  name='RecognizeResponse',
  full_name='sarmata.RecognizeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='sarmata.RecognizeResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='sarmata.RecognizeResponse.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='warning', full_name='sarmata.RecognizeResponse.warning', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='event_time', full_name='sarmata.RecognizeResponse.event_time', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='results', full_name='sarmata.RecognizeResponse.results', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=456,
  serialized_end=602,
)


_PHRASE_WORD = _descriptor.Descriptor(
  name='Word',
  full_name='sarmata.Phrase.Word',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='transcript', full_name='sarmata.Phrase.Word.transcript', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='sarmata.Phrase.Word.confidence', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='sarmata.Phrase.Word.start', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end', full_name='sarmata.Phrase.Word.end', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='logprob', full_name='sarmata.Phrase.Word.logprob', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=722,
  serialized_end=813,
)

_PHRASE = _descriptor.Descriptor(
  name='Phrase',
  full_name='sarmata.Phrase',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='words', full_name='sarmata.Phrase.words', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='sarmata.Phrase.confidence', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='correct', full_name='sarmata.Phrase.correct', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='semantic_interpretation', full_name='sarmata.Phrase.semantic_interpretation', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_PHRASE_WORD, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=605,
  serialized_end=813,
)

_RECOGNIZEREQUEST.fields_by_name['initial_request'].message_type = _INITIALRECOGNIZEREQUEST
_RECOGNIZEREQUEST.fields_by_name['audio_request'].message_type = _AUDIOREQUEST
_INITIALRECOGNIZEREQUEST.fields_by_name['config'].message_type = _CONFIGFIELD
_RECOGNIZERESPONSE.fields_by_name['status'].enum_type = _RESPONSESTATUS
_RECOGNIZERESPONSE.fields_by_name['results'].message_type = _PHRASE
_PHRASE_WORD.containing_type = _PHRASE
_PHRASE.fields_by_name['words'].message_type = _PHRASE_WORD
DESCRIPTOR.message_types_by_name['RecognizeRequest'] = _RECOGNIZEREQUEST
DESCRIPTOR.message_types_by_name['ConfigField'] = _CONFIGFIELD
DESCRIPTOR.message_types_by_name['InitialRecognizeRequest'] = _INITIALRECOGNIZEREQUEST
DESCRIPTOR.message_types_by_name['AudioRequest'] = _AUDIOREQUEST
DESCRIPTOR.message_types_by_name['DefineGrammarRequest'] = _DEFINEGRAMMARREQUEST
DESCRIPTOR.message_types_by_name['DefineGrammarRespone'] = _DEFINEGRAMMARRESPONE
DESCRIPTOR.message_types_by_name['RecognizeResponse'] = _RECOGNIZERESPONSE
DESCRIPTOR.message_types_by_name['Phrase'] = _PHRASE
DESCRIPTOR.enum_types_by_name['ResponseStatus'] = _RESPONSESTATUS

RecognizeRequest = _reflection.GeneratedProtocolMessageType('RecognizeRequest', (_message.Message,), dict(
  DESCRIPTOR = _RECOGNIZEREQUEST,
  __module__ = 'asr_service_pb2'
  # @@protoc_insertion_point(class_scope:sarmata.RecognizeRequest)
  ))
_sym_db.RegisterMessage(RecognizeRequest)

ConfigField = _reflection.GeneratedProtocolMessageType('ConfigField', (_message.Message,), dict(
  DESCRIPTOR = _CONFIGFIELD,
  __module__ = 'asr_service_pb2'
  # @@protoc_insertion_point(class_scope:sarmata.ConfigField)
  ))
_sym_db.RegisterMessage(ConfigField)

InitialRecognizeRequest = _reflection.GeneratedProtocolMessageType('InitialRecognizeRequest', (_message.Message,), dict(
  DESCRIPTOR = _INITIALRECOGNIZEREQUEST,
  __module__ = 'asr_service_pb2'
  # @@protoc_insertion_point(class_scope:sarmata.InitialRecognizeRequest)
  ))
_sym_db.RegisterMessage(InitialRecognizeRequest)

AudioRequest = _reflection.GeneratedProtocolMessageType('AudioRequest', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOREQUEST,
  __module__ = 'asr_service_pb2'
  # @@protoc_insertion_point(class_scope:sarmata.AudioRequest)
  ))
_sym_db.RegisterMessage(AudioRequest)

DefineGrammarRequest = _reflection.GeneratedProtocolMessageType('DefineGrammarRequest', (_message.Message,), dict(
  DESCRIPTOR = _DEFINEGRAMMARREQUEST,
  __module__ = 'asr_service_pb2'
  # @@protoc_insertion_point(class_scope:sarmata.DefineGrammarRequest)
  ))
_sym_db.RegisterMessage(DefineGrammarRequest)

DefineGrammarRespone = _reflection.GeneratedProtocolMessageType('DefineGrammarRespone', (_message.Message,), dict(
  DESCRIPTOR = _DEFINEGRAMMARRESPONE,
  __module__ = 'asr_service_pb2'
  # @@protoc_insertion_point(class_scope:sarmata.DefineGrammarRespone)
  ))
_sym_db.RegisterMessage(DefineGrammarRespone)

RecognizeResponse = _reflection.GeneratedProtocolMessageType('RecognizeResponse', (_message.Message,), dict(
  DESCRIPTOR = _RECOGNIZERESPONSE,
  __module__ = 'asr_service_pb2'
  # @@protoc_insertion_point(class_scope:sarmata.RecognizeResponse)
  ))
_sym_db.RegisterMessage(RecognizeResponse)

Phrase = _reflection.GeneratedProtocolMessageType('Phrase', (_message.Message,), dict(

  Word = _reflection.GeneratedProtocolMessageType('Word', (_message.Message,), dict(
    DESCRIPTOR = _PHRASE_WORD,
    __module__ = 'asr_service_pb2'
    # @@protoc_insertion_point(class_scope:sarmata.Phrase.Word)
    ))
  ,
  DESCRIPTOR = _PHRASE,
  __module__ = 'asr_service_pb2'
  # @@protoc_insertion_point(class_scope:sarmata.Phrase)
  ))
_sym_db.RegisterMessage(Phrase)
_sym_db.RegisterMessage(Phrase.Word)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class ASRStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Recognize = channel.stream_stream(
          '/sarmata.ASR/Recognize',
          request_serializer=RecognizeRequest.SerializeToString,
          response_deserializer=RecognizeResponse.FromString,
          )
      self.DefineGrammar = channel.unary_unary(
          '/sarmata.ASR/DefineGrammar',
          request_serializer=DefineGrammarRequest.SerializeToString,
          response_deserializer=DefineGrammarRespone.FromString,
          )


  class ASRServicer(object):

    def Recognize(self, request_iterator, context):
      """recognizes speech in stream using given grammar
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DefineGrammar(self, request, context):
      """defines user-persistent grammar 
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ASRServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Recognize': grpc.stream_stream_rpc_method_handler(
            servicer.Recognize,
            request_deserializer=RecognizeRequest.FromString,
            response_serializer=RecognizeResponse.SerializeToString,
        ),
        'DefineGrammar': grpc.unary_unary_rpc_method_handler(
            servicer.DefineGrammar,
            request_deserializer=DefineGrammarRequest.FromString,
            response_serializer=DefineGrammarRespone.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'sarmata.ASR', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaASRServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Recognize(self, request_iterator, context):
      """recognizes speech in stream using given grammar
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DefineGrammar(self, request, context):
      """defines user-persistent grammar 
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaASRStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Recognize(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      """recognizes speech in stream using given grammar
      """
      raise NotImplementedError()
    def DefineGrammar(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """defines user-persistent grammar 
      """
      raise NotImplementedError()
    DefineGrammar.future = None


  def beta_create_ASR_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('sarmata.ASR', 'DefineGrammar'): DefineGrammarRequest.FromString,
      ('sarmata.ASR', 'Recognize'): RecognizeRequest.FromString,
    }
    response_serializers = {
      ('sarmata.ASR', 'DefineGrammar'): DefineGrammarRespone.SerializeToString,
      ('sarmata.ASR', 'Recognize'): RecognizeResponse.SerializeToString,
    }
    method_implementations = {
      ('sarmata.ASR', 'DefineGrammar'): face_utilities.unary_unary_inline(servicer.DefineGrammar),
      ('sarmata.ASR', 'Recognize'): face_utilities.stream_stream_inline(servicer.Recognize),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ASR_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('sarmata.ASR', 'DefineGrammar'): DefineGrammarRequest.SerializeToString,
      ('sarmata.ASR', 'Recognize'): RecognizeRequest.SerializeToString,
    }
    response_deserializers = {
      ('sarmata.ASR', 'DefineGrammar'): DefineGrammarRespone.FromString,
      ('sarmata.ASR', 'Recognize'): RecognizeResponse.FromString,
    }
    cardinalities = {
      'DefineGrammar': cardinality.Cardinality.UNARY_UNARY,
      'Recognize': cardinality.Cardinality.STREAM_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'sarmata.ASR', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
